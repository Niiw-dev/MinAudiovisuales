@page "/registros-devocionales"
@using MinAudiovisual.Diary.Domain.Dto
@using MinAudiovisual.Diary.Infrastructure.Interfaces
@inject IDevocionalRepository DevocionalRepository
@rendermode InteractiveServer

<div class="container mt-5">
    <h2 class="text-center mb-4">ðŸ“– Devocionales Registrados</h2>

    @if (devocionales == null)
    {
        <div class="alert alert-info text-center">Cargando...</div>
    }
    else if (!devocionales.Any())
    {
        <div class="alert alert-warning text-center">No hay devocionales registrados aÃºn.</div>
    }
    else
    {
        <MudTable Items="@devocionales" Hover="true" Filterable="true" Bordered="true" Striped="true" Dense="true" Breakpoint="Breakpoint.None">
            <HeaderContent>
                <MudTh>Nombre</MudTh>
                <MudTh>Fecha</MudTh>
                <MudTh>Documento</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.Nombre</MudTd>
                <MudTd>@context.FechaCreado.ToString("dd/MM/yyyy")</MudTd>
                <MudTd>
                    <MudButton Color="Color.Error" Variant="Variant.Filled" 
                               Href=@($"data:application/pdf;base64,{context.Documento}") 
                               fownload=@($"Devocional_{context.Nombre}")>
                        <i class="bi bi-file-earmark-pdf-fill"></i>
                    </MudButton>
                </MudTd>
            </RowTemplate>
        </MudTable>
    }
</div>

@code {
    private List<DevocionalDto> devocionales = new();

    protected override async Task OnInitializedAsync()
    {
        devocionales = await DevocionalRepository.GetAllAsync();
    }
}
