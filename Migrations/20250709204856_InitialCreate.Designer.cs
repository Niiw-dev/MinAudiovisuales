// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinAudiovisual.Migrations;

#nullable disable

namespace MinAudiovisual.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250709204856_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("MinAudiovisual.Diary.Domain.Dto.DevocionalDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Practica")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Promesa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Versiculos")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Devocionales");
                });

            modelBuilder.Entity("MinAudiovisual.Servicios.Domain.Entities.DetalleServicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Anuncios")
                        .HasColumnType("TEXT");

                    b.Property<string>("CancionMinistracion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CancionSantaCena")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HayAnuncios")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HaySantaCena")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObservacionesAdicionales")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrdenCanciones")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Predica")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ServicioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServicioId")
                        .IsUnique();

                    b.ToTable("DetallesServicio");
                });

            modelBuilder.Entity("MinAudiovisual.Servicios.Domain.Entities.Servicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mejoras")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreEvento")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreResponsable")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("MinAudiovisual.Servicios.Domain.Entities.DetalleServicio", b =>
                {
                    b.HasOne("MinAudiovisual.Servicios.Domain.Entities.Servicio", null)
                        .WithOne("Detalle")
                        .HasForeignKey("MinAudiovisual.Servicios.Domain.Entities.DetalleServicio", "ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MinAudiovisual.Servicios.Domain.Entities.Servicio", b =>
                {
                    b.Navigation("Detalle")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
